{
    "tasks": [
        {
            "id": 1,
            "title": "Website Scraping and Product Extraction",
            "status": "In Progress",
            "priority": "high",
            "details": "PHASE 1 FOCUS: Core scraping, data extraction, and formatting. This task establishes reliable product identification and structuring via TypeScript-first logic and MCP compliance.",
            "subtasks": [
                {
                    "id": 1,
                    "title": "Build Structured Website Scraper",
                    "status": "In Progress",
                    "details": "Cheerio-based scraper for product selectors, content fallback, heading-based parsing, and contact info extraction."
                },
                {
                    "id": 2,
                    "title": "Implement Product Confidence Scoring",
                    "status": "Pending",
                    "details": "Attach a `confidenceScore` (0â€“1) to each extracted product for frontend and agent UX filtering."
                },
                {
                    "id": 3,
                    "title": "Align Output to MCPData Schema",
                    "status": "Pending",
                    "details": "Output must include: summary, products, certifications, contacts, confidence_score, fallback_reason, and next_best_action."
                },
                {
                    "id": 4,
                    "title": "Containerize Python Interpreter",
                    "status": "Pending",
                    "details": "Isolate Python logic in `/interpreter/` container/service. No cross-runtime leakage."
                },
                {
                    "id": 5,
                    "title": "Begin Parallel TypeScript Rewrite of output_formatter",
                    "status": "Pending",
                    "details": "Rebuild output formatter logic in `lib/formatters/productFormatter.ts`. Match feature parity before cutover."
                },
                {
                    "id": 6,
                    "title": "Write Unit Tests for Product Formatter",
                    "status": "Pending",
                    "details": "Create test cases for extraction validation, confidence scoring, and fallback handling."
                }
            ]
        },
        {
            "id": 2,
            "title": "LLM Interpreter and Output Integration",
            "status": "In Progress",
            "priority": "high",
            "details": "PHASE 1 FOCUS: Transform scraped content into structured intelligence via MCP-interpreted LLM flows, and simulate Sarah Agent handoffs.",
            "subtasks": [
                {
                    "id": 1,
                    "title": "Wrap Interpreter in MCP Execution Pattern",
                    "status": "In Progress",
                    "details": "Register `ProductExtractionMCP` with standard MCP interface. Log to MCPRun. Accept `assessmentId`-scoped input."
                },
                {
                    "id": 2,
                    "title": "Standardize LLM Output Schema",
                    "status": "In Progress",
                    "details": "Ensure output matches MCPData contract, including fallback_reason, confidence_score, and next_best_action."
                },
                {
                    "id": 3,
                    "title": "Integrate LLM Output with Sarah Agent UX Feedback Loop",
                    "status": "Pending",
                    "details": "Inject structured prompts into frontend context panel. Trigger fallback suggestions when confidence_score is low. Align with `sarah_agent_ux_prd.md`."
                },
                {
                    "id": 4,
                    "title": "Write Unit Tests for LLM Interpreter",
                    "status": "Pending",
                    "details": "Mock common LLM outputs and test schema validity, field population, and output routing to Supabase."
                }
            ]
        }
    ],
    "metadata": {
        "projectName": "TradeWizard Core Intelligence Sprint (Phase 1)",
        "sourceFile": "tasks/tasks.json",
        "generatedAt": "2025-04-22",
        "notes": "This sprint focuses on foundational intelligence: product extraction, structured enrichment, and LLM-to-UX feedback loop. All tasks comply with windsurf.rules.json."
    }
}
