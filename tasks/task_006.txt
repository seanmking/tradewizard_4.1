# Task ID: 6
# Title: Implement Conversation-Driven UI
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Create the conversational interface with the 'Sarah' AI agent persona that guides users through the assessment process.
# Details:
Develop the Center Conversation Panel with a guided conversation interface. Implement the 'Sarah' AI agent persona with appropriate styling and interaction patterns. Create a system for progressive disclosure of questions based on user progress. Design embedded forms for complex inputs within the conversation flow. Implement clear guidance and help text throughout the conversation. Add quick reply options where appropriate. Ensure the conversation flow matches the user flows defined in the PRD.

# Test Strategy:
Test the conversation flow for all assessment stages. Verify proper progression between questions. Test embedded forms for data capture. Validate help text and guidance for clarity and usefulness. Test quick reply functionality for appropriate scenarios.

# Subtasks:
## 1. Design and Implement the 'Sarah' AI Agent Persona [pending]
### Dependencies: None
### Description: Create the visual and interactive components for the 'Sarah' AI agent persona that will guide users through the assessment process.
### Details:
Design the avatar, message bubbles, and styling for the 'Sarah' persona. Implement animations for typing indicators and message transitions. Create reusable components for agent messages vs. user messages with appropriate styling differences. Include personality traits in the design that align with the PRD specifications. Ensure the persona design is accessible and works across different screen sizes.

## 2. Develop the Conversation State Management System [pending]
### Dependencies: 6.1
### Description: Create a robust state management system to handle the conversation flow, message history, and user progress tracking.
### Details:
Implement a state management architecture (Redux/Context API) to track conversation state. Create reducers/actions for adding messages, updating conversation context, and tracking assessment progress. Develop a message queue system to handle message timing and animations. Implement persistence of conversation state to allow users to continue where they left off. Create a logging system to track conversation paths for analysis.

## 3. Implement Progressive Disclosure Logic [pending]
### Dependencies: 6.2
### Description: Build the system that controls the progressive disclosure of questions based on user responses and progress through the assessment.
### Details:
Create a question sequencing engine that determines which questions to show next based on previous answers. Implement branching logic for conversation paths as defined in the PRD. Develop a system to handle conditional questions that only appear based on specific user responses. Create progress indicators to show users where they are in the assessment journey. Implement validation logic to ensure required information is collected before proceeding.

## 4. Create Embedded Form Components for Complex Inputs [pending]
### Dependencies: 6.2
### Description: Design and implement form components that can be embedded within the conversation flow for collecting complex structured data.
### Details:
Develop reusable form components (date pickers, sliders, multi-select, etc.) that maintain the conversational UI aesthetic. Implement validation for form inputs with conversational error messages. Create smooth transitions for revealing and hiding form components within the message flow. Ensure all form components are accessible and mobile-responsive. Implement auto-save functionality for partially completed forms.

## 5. Implement Quick Reply Options and Conversation Controls [pending]
### Dependencies: 6.3, 6.4
### Description: Add interactive quick reply buttons, help text, and conversation controls to enhance the user experience.
### Details:
Design and implement quick reply buttons for common responses. Create a system for contextual help text that can be triggered within the conversation. Implement conversation controls (edit previous answers, restart, etc.). Add keyboard shortcuts for common actions. Create a system for suggesting next steps based on the current conversation context. Ensure all interactive elements align with the conversation flows defined in the PRD.

