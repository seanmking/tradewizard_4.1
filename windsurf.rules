{
  "project": "TradeWizard 4.1",
  "description": "Execution and architecture rules for AI agent Windsurf. This file defines mandatory constraints, references, and review checks to ensure alignment with strategic goals, architecture, and implementation plans.",

  "mandatory_references": [
    "docs/TradeWizard_4.0_PRD.md",
    "docs/sarah_agent_ux_prd.md",
    "tasks/tasks.json"
  ],

  "enforced_principles": {
    "no_unapproved_stack_changes": true,
    "primary_language": "TypeScript",
    "backend_language_exceptions": ["Python (temporary, containerized only)"],
    "mcp_compatibility_required": true,
    "output_schema": "MCPData",
    "require_confidence_scores": true,
    "frontend_integration_ready": true,
    "task_alignment_required": true,
    "fallback_reason_required": true
  },

  "prohibited_actions": [
    "Introducing new runtimes without explicit approval (e.g., Python, Rust, Go)",
    "Adding stateful logic outside of MCP patterns",
    "Creating services not scoped by `assessmentId`",
    "Ignoring taskmaster.taskId mapping in implementations"
  ],

  "review_before_submit": [
    "Was the PRD referenced? (TradeWizard 4.0, Sarah UX, tasks.json)",
    "Does this change support or extend an existing Taskmaster task?",
    "Is there TypeScript-first implementation where possible?",
    "Is Python containerized and bounded?",
    "Are MCP logs, confidence, fallback reason, and standard output schema present?"
  ],

  "output_contract": {
    "expected_schema_fields": [
      "summary",
      "products",
      "certifications",
      "contacts",
      "confidence_score",
      "fallback_reason",
      "next_best_action"
    ]
  }
}
